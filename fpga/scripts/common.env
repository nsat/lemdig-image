#!/usr/bin/env bash

shopt -s extglob

export PROFILE_DIR=${SCRIPT_DIR}/profile

if [ "_${module}" = "_" -o "_${platform}" = "_" ]; then
  echo "Please set 'module', 'platform' and 'intent' environment variables before running this script."
  exit 1
fi

# SAAM version logic (not relevant for all builds)
temp=${module%%+([0-9])}
SAAM_VERSION=${module#$temp}
if [ -z "$SAAM_VERSION" ]
then
	SAAM_VERSION=5
fi

export module=$temp
export SAAM_VERSION
export FPGA_PROFILE="${module}-${platform}"
export PROFILE_PATH=${PROFILE_DIR}/${FPGA_PROFILE}.env
export FPGA_BUILD_DIR_ROOT=${SCRIPT_DIR}/../build
export FPGA_BUILD_DIR=${FPGA_BUILD_DIR_ROOT}/${FPGA_PROFILE}_"${intent}"
export FPGA_SRC_ROOT_DIR=${SCRIPT_DIR}/..

function source_profile_setting() {
  if [ ! -f "${PROFILE_PATH}" ]; then
    echo "FPGA_PROFILE ${PROFILE_PATH} is not found."
    echo "Available profiles are:"
    for file in "${PROFILE_DIR}"/*.env; do
      echo "  - ${file}"
    done
    exit 1
  fi
  echo "Sourcing ${PROFILE_PATH}"
  source "${PROFILE_PATH}"
  export XILINX_VERSION=${XILINX_VERSION}
  export FPGA_PART=${FPGA_PART}
  if [[ "${module}" == *"saam"* ]]; then
    export TOP_SRC_DIR=${FPGA_SRC_ROOT_DIR}/top-level/${module}/common/${intent}
  else
    export TOP_SRC_DIR=${FPGA_SRC_ROOT_DIR}/top-level/${module}/${platform}/${intent}
  fi
  if [ ! -e "${TOP_SRC_DIR}" ]; then
    error_exit "TOP_SRC_DIR ${TOP_SRC_DIR} is not found."
  fi
  export TOP_SRC_DIR_PLATFORM=${FPGA_SRC_ROOT_DIR}/top-level/${module}/${platform}/${intent}
  if [ ! -e "${TOP_SRC_DIR_PLATFORM}" ]; then
    error_exit "TOP_SRC_DIR_PLATFORM ${TOP_SRC_DIR_PLATFORM} is not found."
  fi
}

function source_xilinx_setup_script() {
  if [ "_${XILINX_VIVADO_SETUP_SCRIPT}" != "_" ] && [ -f "${XILINX_VIVADO_SETUP_SCRIPT}" ]; then
    echo "Sourcing Xilinx Vivado setup script: ${XILINX_VIVADO_SETUP_SCRIPT}"
    source "${XILINX_VIVADO_SETUP_SCRIPT}"
  else
    echo "Xilinx setup script ${XILINX_VIVADO_SETUP_SCRIPT} is not found"
    exit 1
  fi
  if [ "_${XILINX_SDK_SETUP_SCRIPT}" != "_" ] && [ -f "${XILINX_SDK_SETUP_SCRIPT}" ]; then
    echo "Sourcing Xilinx SDK setup script: ${XILINX_SDK_SETUP_SCRIPT}"
    source "${XILINX_SDK_SETUP_SCRIPT}"
  else
    echo "Xilinx setup script ${XILINX_SDK_SETUP_SCRIPT} is not found"
    exit 1
  fi
}

function create_build_dir() {
  mkdir -p "${FPGA_BUILD_DIR}" || error "Couldn't create FPGA build directory"
  sudo chown ${USER}:${USER} "${FPGA_BUILD_DIR_ROOT}" || error "Couldn't change permission of FPGA build root directory"
}
