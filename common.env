SCRIPT_DIR=${SCRIPT_DIR:-"$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"}
echo "common.env SCRIPT_DIR = $SCRIPT_DIR"

# usage: print_step "message string" [true|false]
# param1: string title of step
# param2: true (or blank) to including trailing \n, false to exclude it
function print_step() {
    if $2; then
        nl="\n"
    else
        nl=""
    fi
    printf "========== $1 ==========${nl}"
}

# usage: error "message string"
# param1: string indicating error
function error() {
    echo "****************************************"
    echo $1
    exit 1
}

# usage: warn "message string"
# param1: string indicating warning
function warn() {
    echo "----------------------------------------"
    echo "WARNING: $1"
    echo "----------------------------------------"
}

# Enters build directory
# usage: cd_build
function cd_build() {
    echo "cd_build - $LEMDIG_BUILD_DIR"
    sudo mkdir -p "${LEMDIG_BUILD_DIR}" || error "Couldn't create build directory"
    sudo chown ${USER}:${USER} "${LEMDIG_BUILD_DIR}" || error "Couldn't take ownership of shared directory"
    pushd "${LEMDIG_BUILD_DIR}" &>/dev/null || error "Couldn't enter build directory"
}

# Root directory of the 'air' repo.
LEMDIG_SOURCE_DIR="${SCRIPT_DIR}/lemdig"

# Top directory for build
LEMDIG_TOP_DIR=${LEMDIG_TOP_DIR:-"/opt/lemdig-image"}

# Directory that has the downloads and the sstate cache
LEMDIG_YOCTO_CACHE=${LEMDIG_YOCTO_CACHE:-${LEMDIG_TOP_DIR}}

# LEMDIG_PROFILE defaults to the 'generic' profile if a payload-specific one is not specified.
LEMDIG_PROFILE=${LEMDIG_PROFILE:-"generic"}
LEMDIG_BUILD_DIR="${LEMDIG_TOP_DIR}/${LEMDIG_PROFILE}"

# Source the profile environment vars
source "${SCRIPT_DIR}/meta-${LEMDIG_PROFILE}/${LEMDIG_PROFILE}.env"

# Create shared directories
sudo mkdir -p "${LEMDIG_YOCTO_CACHE}"                                 || error "Couldn't create shared directory"
sudo chown ${USER}:${USER} "${LEMDIG_YOCTO_CACHE}"                    || error "Couldn't take ownership of shared directory"
sudo mkdir -p "${LEMDIG_YOCTO_CACHE}/cache"                           || error "Couldn't create cache directory"
sudo chown ${USER}:${USER} "${LEMDIG_YOCTO_CACHE}/cache"              || error "Couldn't take ownership of cache directory"
sudo mkdir -p "${LEMDIG_YOCTO_CACHE}/cache/downloads"                 || error "Couldn't create cache downloads directory"
sudo chown ${USER}:${USER} "${LEMDIG_YOCTO_CACHE}/cache/downloads"    || error "Couldn't take ownership of cache downloads directory"
sudo mkdir -p "${LEMDIG_YOCTO_CACHE}/cache/sstate-cache"              || error "Couldn't create cache sstate-cache directory"
sudo chown ${USER}:${USER} "${LEMDIG_YOCTO_CACHE}/cache/sstate-cache" || error "Couldn't take ownership of cache sstate-cache directory"

# Env vars

echo "SCRIPT_DIR                    = $SCRIPT_DIR"
echo "LEMDIG_TOP_DIR                = $LEMDIG_TOP_DIR"
echo "LEMDIG_SOURCE_DIR             = $LEMDIG_SOURCE_DIR"
echo "LEMDIG_YOCTO_CACHE            = $LEMDIG_YOCTO_CACHE"
echo "LEMDIG_PROFILE                = $LEMDIG_PROFILE"

echo "Profile specific env vars"
echo "LEMDIG_PAYLOAD_LAYER          = $LEMDIG_PAYLOAD_LAYER"
echo "LEMDIG_PAYLOAD_LOCAL_CONF     = $LEMDIG_PAYLOAD_LOCAL_CONF"
echo "LEMDIG_PAYLOAD_LOCAL_BBLAYERS = $LEMDIG_PAYLOAD_LOCAL_BBLAYERS"

echo "LEMDIG_BUILD_DIR              = $LEMDIG_BUILD_DIR"
